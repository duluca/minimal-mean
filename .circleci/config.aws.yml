version: 2
jobs:
  build:
    docker:
      - image: docker:17.12.0-ce-git
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Execute Pipeline (Build Source -> Test -> Build Web Server)
          # code is checked out in the pipeline, consider copying from CI to Pipeline
          # consider caching node_modules or switching to npm ci option when it becomes stable
          command: |
            docker build -f integration.Dockerfile . -t lemon-mart:$CIRCLE_BRANCH
            mkdir -p docker-cache
            docker save -o docker-cache/built-image.tar lemon-mart:$CIRCLE_BRANCH
      - save_cache:
          key: built-image-{{ .BuildNum }}
          paths:
            - docker-cache
      - store_artifacts:
          path: docker-cache/built-image.tar
          destination: built-image.tar

  publish:
    docker:
      - image: docker:17.12.0-ce-git
    working_directory: /usr/src
    steps:
      - restore_cache:
        keys:
          - built-image-{{ .BuildNum }}
          - built-image
      - setup_remote_docker
      - run:
          name: Sign into AWS ecr
          command: $(aws ecr get-login --no-include-email --region us-east-1)
      - run:
          name: Push it to ECR
          command: |
            docker load < docker-cache/built-image.tar
            docker tag my_app:$CIRCLE_BRANCH $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/lemon-mart:$CIRCLE_BRANCH
            docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/lemon-mart:$CIRCLE_BRANCH

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: sequential-branch-filter

# Consider tagging images with $CIRCLE_BRANCH
# Deployment Integrations https://circleci.com/docs/2.0/deployment-integrations
# For Docker Hub deploy see https://circleci.com/docs/2.0/building-docker-images/
# For AWS ECS deploy see https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
# For Heroku see https://devcenter.heroku.com/articles/container-registry-and-runtime#pushing-an-image-s
# For cache optimization read https://medium.com/@gajus/making-docker-in-docker-builds-x2-faster-using-docker-cache-from-option-c01febd8ef84
